import pandas as pd
import numpy as np
import math
#initiating dataframe
data=pd.read_csv("AXISBANK.csv")
list1=["BAJFINANCE","DRREDDY","GAIL","HDFC","HDFCBANK","INFY","LT","HINDUNILVR","TITAN"]
X=pd.DataFrame(data["Close Price"])
for i in range(len(list1)):
    x=pd.read_csv(list1[i]+".csv")
    x=x[x.Series == "EQ"].reset_index(drop=True)
    x2=pd.DataFrame(x["Close Price"])
    X=pd.concat((X,x2), axis=1)

X=X.drop(494)#dropping last row
list11=["AXISBANK","BAJFINANCE","DRREDDY","GAIL","HDFC","HDFCBANK","INFY","LT","HINDUNILVR","TITAN"]
X.columns=list11 #giving the column name

#midcap
data2=pd.read_csv("APOLLOTYRE.csv")
X2=pd.DataFrame(data2["Close Price"])
list2=["BERGEPAINT","GODREJIND","IGL","JUBLFOOD","MINDTREE","RBLBANK","VOLTAS","MUTHOOTFIN","JINDALSTEL"]

for i in range(len(list2)):
    x=pd.read_csv(list2[i]+".csv")
    x=x[x.Series == "EQ"].reset_index(drop=True)
    x2=pd.DataFrame(x["Close Price"])
    X2=pd.concat((X2,x2), axis=1)

list22=["APOLLOTYRE","BERGEPAINT","GODREJIND","IGL","JUBLFOOD","MINDTREE","RBLBANK","VOLTAS","MUTHOOTFIN","JINDALSTEL"]
X2.columns=list22    

#small cap
data3=pd.read_csv("BAJAJELEC.csv")
X3=pd.DataFrame(data3["Close Price"])
list3=["CENTURYPLY","IRCON","LALPATHLAB","LEMONTREE","PVR","LUXIND","RAYMOND","VIPIND","JETAIRWAYS"]

for i in range(len(list3)):
    x=pd.read_csv(list3[i]+".csv")
    x=x[x.Series == "EQ"].reset_index(drop=True)
    x2=pd.DataFrame(x["Close Price"])
    X3=pd.concat((X3,x2), axis=1)

list33=["BAJAJELEC","CENTURYPLY","IRCON","LALPATHLAB","LEMONTREE","PVR","LUXIND","RAYMOND","VIPIND","JETAIRWAYS"]
X3.columns=list33 

dataset=pd.concat((X,X2,X3),axis=1)

# let us assume that theoretical one year period is of 252 days then
name=list11+list22+list33
a_r=[]
vol=[]
for i in range(30):
    x=pd.DataFrame(dataset[name[i]].pct_change()*100)
    x=x[x[name[i]]>=-45]
    a_r.append((x[name[i]].mean())*252)
    vol.append((x[name[i]].std())*math.sqrt(252))
    
    
data=pd.DataFrame(list(zip(name, a_r, vol)), 
               columns =['Stocks', 'Annual_returns',"Volatility"])     


#Applying kmeans clustering
from sklearn.cluster import KMeans
import seaborn as sns
import matplotlib.pyplot as plt
%matplotlib inline

X4=data.iloc[:,1:]


# Elbow method    
wcss = []
for i in range(1, 11):
    kmeans = KMeans(n_clusters=i, init='k-means++', max_iter=300, n_init=10, random_state=0)
    kmeans.fit(X4)
    wcss.append(kmeans.inertia_)
plt.plot(range(1, 11), wcss)
plt.title('Elbow Method')
plt.xlabel('Number of clusters')
plt.ylabel('WCSS')
plt.show()

#we are getting 4 as the best number of clusters
kmeans = KMeans(n_clusters=4, init='k-means++', max_iter=300, n_init=10, random_state=0)
kmeans.fit(X4)
X4=np.array(X4)
plt.scatter(X4[:,0], X4[:,1], c=kmeans.labels_)
plt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1], s=300, c='red')
plt.show()

# dataframe showing different clusters
cluster_map = pd.DataFrame()
cluster_map['data_index'] = data.Stocks.values
cluster_map['cluster'] = kmeans.labels_
